#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        toEng {
            bindings = <&kp LANG2>;
            key-positions = <24 25>;
        };

        toJp {
            bindings = <&kp LANG1>;
            key-positions = <31 30>;
        };

        tonzura {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        Rtonzura {
            bindings = <&kp ESCAPE>;
            key-positions = <8 9>;
        };

        single {
            bindings = <&kp SQT>;
            key-positions = <32 33>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <20 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        space4: space4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp SPACE &kp SPACE &kp SPACE>;
            label = "SPACE4";
        };

        right4: right4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT &kp RIGHT &kp RIGHT &kp RIGHT>;
            label = "RIGHT4";
        };

        left4: left4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT &kp LEFT &kp LEFT &kp LEFT>;
            label = "LEFT4";
        };

        tabSw_st: tabSw_st {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp TAB>,
                <&macro_release>,
                <&kp TAB>;

            label = "TABSW_ST";
        };

        tabSw_ed: tabSw_ed {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "TABSW_ED";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W           &lt 5 E     &kp R         &kp T                                        &kp Y            &kp U        &lt 5 I     &kp O        &kp P
&kp A        &mt LCTRL S     &mt LALT D  &mt LSHIFT F  &kp G        &kp LS(LG(S))    &kp MINUS      &kp H            &mt RSHFT J  &mt RALT K  &mt RCTRL L  &lt 3 SEMICOLON
&mt LCTRL Z  &mt LEFT_WIN X  &kp C       &kp V         &kp B        &kp COLON        &kp SEMICOLON  &kp N            &kp M        &kp COMMA   &kp DOT      &mt RSHFT SLASH
&mkp MB3     &trans          &mkp MB2    &mkp MB1      &lt 1 SPACE  &lt 5 TAB        &lt 5 ENTER    &lt 2 BACKSPACE                                        &kp LCTRL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNC_SYMBOL {
            bindings = <
&kp DELETE       &kp F7        &kp F8       &kp F9         &kp F12                       &kp AMPERSAND    &kp ASTRK          &kp BACKSLASH   &kp LPAR         &kp RPAR
&trans           &mt LCTRL F4  &mt LALT F5  &mt LSHIFT F6  &kp F11  &trans    &trans     &kp DOLLAR       &mt RSHFT PERCENT  &mt RALT CARET  &mt RCTRL MINUS  &mt SINGLE_QUOTE EQUAL
&kp PRINTSCREEN  &kp F1        &kp F2       &kp F3         &kp F10  &trans    &trans     &kp EXCLAMATION  &kp AT_SIGN        &kp HASH        &kp LBKT         &kp RIGHT_BRACKET
&trans           &trans        &trans       &trans         &trans   &trans    &kp ENTER  &kp BACKSPACE                                                        &trans
            >;
        };

        NUM_ARROW {
            bindings = <
&kp COLON   &kp N7        &kp N8           &kp N9        &kp MINUS                                     &left4    &trans         &trans        &right4    &kp BACKSPACE
&kp N0      &mt LCTRL N4  &mt LEFT_ALT N5  &mt LSHFT N6  &kp SLASH  &kp LC(LA(KP_NUMBER_0))    &trans  &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &trans
&kp PERIOD  &kp N1        &kp N2           &kp N3        &kp COMMA  &kp EQUAL                  &trans  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &trans
&trans      &trans        &trans           &trans        &kp SPACE  &kp TAB                    &trans  &trans                                            &trans
            >;
        };

        MOUSE_ETC {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &mo 6                       &kp LC(T)  &kp LG(TAB)        &kp TAB       &kp LCTRL      &kp LS(LG(D))
&trans  &trans        &trans        &trans        &trans  &trans    &trans    &kp LC(S)  &kp LA(LC(RIGHT))  &kp LA(LEFT)  &kp LA(RIGHT)  &trans
&trans  &trans        &trans        &trans        &trans  &trans    &trans    &kp LC(N)  &mkp MB3           &kp LC(W)     &trans         &to 0
&trans  &trans        &trans        &trans        &trans  &trans    &mkp MB2  &mkp MB1                                                   &mo 6
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        AML {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;
        };

        SCL_UTIL {
            bindings = <
&kp ESCAPE           &kp LG(LS(C))           &kp LG(V)                &kp LG(LC(T))      &kp LG(LS(T))                         &kp TAB  &kp LA(PRINTSCREEN)  &kp LC(C)      &kp LC(V)  &trans
&kp LG(LS(S))        &kp LCTRL               &kp LEFT_ALT             &kp LSHIFT         &trans             &trans     &trans  &trans   &kp RSHIFT           &kp RIGHT_ALT  &kp RCTRL  &kp GRAVE
&kp LA(PRINTSCREEN)  &kp LC(LG(LEFT_ARROW))  &kp LC(LG(RIGHT_ARROW))  &kp LS(LG(RIGHT))  &kp LC(LS(LG(B)))  &trans     &trans  &trans   &kp LS(LG(RIGHT))    &trans         &kp LWIN   &kp INSERT
&trans               &trans                  &trans                   &trans             &trans             &space4    &trans  &trans                                                  &trans
            >;
        };

        BT_CONTROL {
            bindings = <
&trans          &trans         &trans         &trans         &trans                            &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4
&trans          &trans         &trans         &trans         &trans  &trans    &bt BT_CLR_ALL  &trans         &trans         &trans         &trans         &trans
&trans          &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &trans  &trans    &bt BT_CLR      &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4
&bt BT_CLR_ALL  &trans         &trans         &trans         &trans  &trans    &trans          &trans                                                      &trans
            >;
        };
    };
};
